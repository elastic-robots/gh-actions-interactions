name: ci

on:
  issue_comment:
    types: [created]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

# limit the access of the generated GITHUB_TOKEN
permissions:
  contents: write
  pull-requests: write

jobs:
  test-tav:
    if: github.event.issue.pull_request && startsWith(github.event.comment.body, '/test tav')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      ##
      ## PRE-FLIGHT CHECKS
      ##
      - name: View context attributes
        uses: actions/github-script@v6
        with:
          script: console.log(context)

      - uses: elastic/apm-pipeline-library/.github/actions/validate-github-comment@feature/is-comment-supported

      - name: Transform comment to the supported matrix
        uses: actions/github-script@v6
        with:
          script: |
            core.exportVariable('PR_NUMBER', context.payload.issue.number)
            // Transform comment in the right data structure to be consumed later on
            const comment = context.payload.comment.body
            const regexpSize = /\/test module (.+) in (.+)/
            const match = comment.match(regexpSize)
            if (match[1]) {
              const modules = match[1].replace(/\s/g, '').split(',')
              console.log(`modules: ${modules}`)
              core.exportVariable('MODULES', modules)
            }
            if (match[2]) {
              const nodes = match[2].replace(/\s/g, '').split(',')
              console.log(`nodes: ${nodes}`)
              core.exportVariable('NODES', nodes)
            }
      ##
      ## BUILD
      ##
      - run: echo ${{ env.MODULES }} && echo ${{ env.NODES }}
      - uses: actions/checkout@v3
        with:
          ref: refs/pull/${{ env.PR_NUMBER }}/merge
      - run: echo 'hi'
        env:
          ELASTIC_APM_CONTEXT_MANAGER: ''

      ##
      ## POST-BUILD notifications
      ##
      - name: Notify - success
        if: success()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              ...context.repo,
              comment_id: context.payload.comment.id,
              content: 'heart',
            })

      - name: Notify - failure
        if: failure()
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.reactions.createForIssueComment({
              ...context.repo,
              comment_id: context.payload.comment.id,
              content: '-1',
            })
